<div class="container">
    <div class="row">
        <div class="col-md-4">
            <div class="text-light mt-3" style="flex: 1 1 auto;"><label>{{displayname}}'s Token</label>
                <div id="show-token-here" class=""
                     style="flex: 1 1 auto;font-family: 'Source Code Pro', sans-serif; font-size: 16px; color: dimgray; font-weight: 500;">
                    <button class="btn btn-primary btn-sm" id="show-token" type="button" onclick="showToken()">Show
                        token
                    </button>
                </div>
                <div class="mt-3">
                    <button class="btn btn-primary" id="copy-token" type="button" onclick="copyToken()">Copy</button>
                    <button class="btn btn-primary ml-2" id="reset-token" type="button" onclick="resetToken()">
                        Regenerate
                    </button>
                </div>
            </div>
        </div>
    </div>
</div>
<script>
    function copyToken() {
        let element = document.getElementById("copy-token");
        let content = document.createElement("textarea");
        document.body.appendChild(content);
        content.innerHTML = "{{token}}";
        content.select();
        document.execCommand("copy");
        document.body.removeChild(content);

        element.classList.remove("btn-primary");
        element.classList.add("btn-success");
        element.innerText = "Copied!";
        setTimeout(() => {
            element.classList.remove("btn-success");
            element.classList.add("btn-primary");
            element.innerText = "Copy";
        }, 750);
    }
    function resetToken() {
        let element = document.getElementById("reset-token");
        element.classList.remove("btn-primary");
        element.classList.add("btn-warning");
        element.innerText = "Regenerating";

        let xhr = new XMLHttpRequest();
        xhr.open("POST", "/resetToken");
        xhr.setRequestHeader("Content-Type", "application/json");
        xhr.setRequestHeader("Token", "{{token}}");

        xhr.onreadystatechange = function () {
            if (xhr.readyState === 4) {
                console.log(xhr.status);
                console.log(xhr.responseText);
            }
        };
        xhr.send();

        setTimeout(() => {
            element.classList.remove("btn-warning");
            element.classList.add("btn-primary");
            element.innerText = "Regenerate";
            location.reload();
        }, 750);
    }
    function showToken() {
        let tokenHere = document.getElementById("show-token-here");
        let btn = document.getElementById("show-token");

        btn.parentNode.removeChild(btn);
        tokenHere.innerText = "{{token}}";

        setTimeout(() => {
            tokenHere.innerText = "";
            tokenHere.appendChild(btn);
        }, 1000 * 5);
    }
</script>
